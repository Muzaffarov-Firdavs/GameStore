@using GameStore.Service.DTOs.Games;
@model GameResultDto

@{
    ViewData["Title"] = "Details";
}
<br />

<div class="move-margin">
    <div class="card text-white bg-dark border-0 box" style="width: 71rem;">
        <div class="image-container">
            <img class="card-img-top" src="../../Images/@Model.Image.FileName" alt="@Model.Image.FileName">
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <p class="text-price lead card-text">@Model.Name</p>
                    <p class="display-6">$@Model.Price</p>
                </div>
                <div class="col">
                </div>
                <div class="col">
                    <a href="#" class="btn btn-success ms-5">BUY</a>
                </div>
            </div>
            <hr />
            <p>
                @foreach (var genre in Model.Genres)
                {
                    <button class="hidden-corners-button">@genre.Name</button>
                }
            </p>
            <br />
            <div class="row">
                <h6 class="thin-version">@Model.Description</h6>
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit Game</a>
                </div>
                <div class="col">
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete Game</a>
                </div>
            </div>
            <br />
            <div id="reply-comment" class="comment-form mt-4" hidden>
                <form asp-action="AddComment" asp-controller="Games">
                    <input type="hidden" name="gameId" value="@Model.Id" />
                    <div class="form-group">
                        <label for="commentText">Comment:</label>
                        <textarea class="form-control" id="commentText" name="commentText" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Comment</button>
                </form>
            </div>
            <button class="btn bg-dark text-primary mt-4" onclick="toggle(this)">Left Comment</button>
            <br />
            @foreach (var comment in Model.Comments)
            {
                <div class="row">
                    <div class="col">
                        <div class="d-flex flex-start mt-4">
                            <img class="rounded-circle shadow-1-strong me-3"
                                 src="~/Images/@comment.User.Image.FileName" alt="avatar" width="40"
                                 height="40" />
                            <div class="flex-grow-1 flex-shrink-1">
                                <div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <p class="mb-1">
                                            @comment.User.FirstName @comment.User.LastName
                                            <span class="small">- @GetTimeElapsed(comment.CreatedAt)</span>
                                        </p>
                                    </div>
                                    <p class="small mb-0">@comment.Text</p>
                                    <!-- hiding reply -->
                                    <div id="sub-comment" class="comment-form mt-4" hidden>
                                        <form asp-action="AddSubComment" asp-controller="Games">
                                            <input type="hidden" name="commentId" id="@comment.Id" value="@comment.Id" />
                                            <input type="hidden" name="gameId" value="@Model.Id" />
                                            <div class="form-group">
                                                <label for="subcommentText">Comment:</label>
                                                <textarea class="form-control" id="subcommentText" name="subcommentText" required></textarea>
                                            </div>
                                            <button type="submit" class="btn btn-primary">Reply</button>
                                        </form>
                                    </div>
                                    <button class="bg-dark text-primary border-0" style="font-size:20px"
                                                                            onclick="toggleSubComment(this)"
                                                                            data-comment-id="@comment.Id">
                                        <small> Reply </small>
                                    </button>
                                    <!-- finishing hiding reply -->
                                </div>
                                @foreach (var subComment in comment.SubComments)
                                {
                                    <div class="d-flex flex-start mt-4">
                                        <a class="me-3" href="#">
                                            <img class="rounded-circle shadow-1-strong"
                                                 src="~/Images/@subComment.User.Image.FileName" alt="avatar"
                                                 width="40" height="40" />
                                        </a>
                                        <div class="flex-grow-1 flex-shrink-1">
                                            <div>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <p class="mb-1">
                                                        @subComment.User.FirstName @subComment.User.LastName
                                                        <span class="small">- @GetTimeElapsed(subComment.CreatedAt)</span>
                                                    </p>
                                                </div>
                                                <p class="small mb-0">@subComment.Text</p>
                                                <a href="#!" class="text-primary" style="font-size:20px"> <small> Reply </small> </a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="clr"></div>

<script>
    let toggle = button => {
        let element = document.getElementById("reply-comment");
        let hidden = element.getAttribute("hidden");

        if (hidden) {
            element.removeAttribute("hidden");
            button.innerText = "Cancel";
        } else {
            element.setAttribute("hidden", "hidden");
            button.innerText = "Left Comment";
        }
    }

    let toggleSubComment = button => {
        let element = document.getElementById("sub-comment");
        let hidden = element.getAttribute("hidden");

        if (hidden) {
            element.removeAttribute("hidden");
            button.innerText = "Cancel";
        } else {
            element.setAttribute("hidden", "hidden");
            button.innerText = "Reply";
        }
    }
</script>


<!--Code for to display time left-->
@functions
{
    public string GetTimeElapsed(DateTime createdAt)
    {
        var currentTime = DateTime.UtcNow;
        var timeElapsed = currentTime - createdAt;

        if (timeElapsed.TotalMinutes < 1)
        {
            // Less than a minute
            return "Just now";
        }
        else if (timeElapsed.TotalHours < 1)
        {
            // Minutes
            var minutes = (int)timeElapsed.TotalMinutes;
            return $"{minutes} minute{(minutes != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 1)
        {
            // Hours
            var hours = (int)timeElapsed.TotalHours;
            return $"{hours} hour{(hours != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 30)
        {
            // Days
            var days = (int)timeElapsed.TotalDays;
            return $"{days} day{(days != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 365)
        {
            // Months
            var months = (int)(timeElapsed.TotalDays / 30);
            return $"{months} month{(months != 1 ? "s" : "")} left";
        }
        else
        {
            // Years
            var years = (int)(timeElapsed.TotalDays / 365);
            return $"{years} year{(years != 1 ? "s" : "")} left";
        }
    }
}