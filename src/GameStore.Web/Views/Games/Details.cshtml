@using GameStore.Service.DTOs.Games;
@model GameResultDto

@{
    ViewData["Title"] = "Details";
}
<br />

<div class="move-margin">
    <div class="card text-white bg-dark border-0 box" style="width: 71rem;">
        <div class="image-container">
            <img class="card-img-top" src="../../Images/@Model.Image.FileName" alt="@Model.Image.FileName">
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <p class="text-price lead card-text">@Model.Name</p>
                    <p class="display-6">$@Model.Price</p>
                </div>
                <div class="col">
                </div>
                <div class="col">
                    <a href="#" class="btn btn-success ms-5">BUY</a>
                </div>
            </div>
            <hr />
            <p>
                @foreach (var genre in Model.Genres)
                {
                    <button class="hidden-corners-button">@genre.Name</button>
                }
            </p>
            <br />
            <div class="row">
                <h6 class="thin-version">@Model.Description</h6>
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit Game</a>
                </div>
                <div class="col">
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete Game</a>
                </div>
            </div>
            <br />
            @foreach (var comment in Model.Comments)
            {
                <div class="darker mt-4 text-justify">
                    <h4>
                        <img src="~/Images/@comment.User.Image.FileName" alt="" class="rounded-circle" width="40" height="40">
                        <strong>@comment.User.FirstName @comment.User.LastName</strong>
                        <span class="h6">- @GetTimeElapsed(comment.CreatedAt)</span>
                    </h4>
                    <p><small>@comment.Text</small></p>
                    <a href="#" class="text-primary" style="font-size:20px"> <small> Reply </small> </a>
                </div>
            }
            <div class="comment-form">
                <h3>Add a Comment</h3>
                <form asp-action="AddComment" asp-controller="Games">
                    <input type="hidden" name="gameId" value="@Model.Id" />
                    <div class="form-group">
                        <label for="commentText">Comment:</label>
                        <textarea class="form-control" id="commentText" name="commentText" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit Comment</button>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="clr"></div>


<!--Code for to display time left-->
@functions
{
    public string GetTimeElapsed(DateTime createdAt)
    {
        var currentTime = DateTime.UtcNow;
        var timeElapsed = currentTime - createdAt;

        if (timeElapsed.TotalMinutes < 1)
        {
            // Less than a minute
            return "Just now";
        }
        else if (timeElapsed.TotalHours < 1)
        {
            // Minutes
            var minutes = (int)timeElapsed.TotalMinutes;
            return $"{minutes} minute{(minutes != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 1)
        {
            // Hours
            var hours = (int)timeElapsed.TotalHours;
            return $"{hours} hour{(hours != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 30)
        {
            // Days
            var days = (int)timeElapsed.TotalDays;
            return $"{days} day{(days != 1 ? "s" : "")} left";
        }
        else if (timeElapsed.TotalDays < 365)
        {
            // Months
            var months = (int)(timeElapsed.TotalDays / 30);
            return $"{months} month{(months != 1 ? "s" : "")} left";
        }
        else
        {
            // Years
            var years = (int)(timeElapsed.TotalDays / 365);
            return $"{years} year{(years != 1 ? "s" : "")} left";
        }
    }
}